---
kind: pipeline
name: testing

platform:
  os: linux
  arch: amd64

steps:
- name: vet
  pull: always
  image: golang:1.15
  commands:
  - make vet
  volumes:
  - name: gopath
    path: /go

- name: lint
  pull: always
  image: golang:1.15
  commands:
  - make lint
  volumes:
  - name: gopath
    path: /go

- name: misspell
  pull: always
  image: golang:1.15
  commands:
  - make misspell-check
  volumes:
  - name: gopath
    path: /go

- name: test
  pull: always
  image: golang:1.15
  commands:
  - make test
  - make coverage
  volumes:
  - name: gopath
    path: /go

- name: codecov
  pull: always
  image: robertstettner/drone-codecov
  settings:
    token:
      from_secret: codecov_token

volumes:
- name: gopath
  temp: {}

---
kind: pipeline
name: linux-amd64-mysql-5.6

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: mysql-5.6
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.mysql.5.6
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

---
kind: pipeline
name: linux-amd64-mysql-5.7

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: mysql-5.7
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.mysql.5.7
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

---
kind: pipeline
name: linux-amd64-mysql-8

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: mysql-8
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.mysql.8
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

---
kind: pipeline
name: linux-amd64-postgres-9

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: postgres-9
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.postgres.9
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

---
kind: pipeline
name: linux-amd64-postgres-10

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: postgres-10
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.postgres.10
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

---
kind: pipeline
name: linux-amd64-postgres-11

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: postgres-11
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.postgres.11
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

---
kind: pipeline
name: linux-amd64-postgres-12

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: postgres-12
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.postgres.12
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

---
kind: pipeline
name: linux-amd64-postgres-13

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
      exclude:
      - tag

- name: build-tag
  pull: always
  image: golang:1.15
  commands:
  - "go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/docker-backup-database ./cmd/backup"
  environment:
    CGO_ENABLED: 0
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.15
  commands:
  - ./release/linux/amd64/docker-backup-database --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    cache_from: appleboy/docker-backup-database
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: appleboy/docker-backup-database
    tags: linux-amd64
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: postgres-13
    cache_from: appleboy/docker-backup-database
    daemon_off: false
    dockerfile: docker/Dockerfile.postgres.13
    password:
      from_secret: docker_password
    repo: appleboy/docker-backup-database
    username:
      from_secret: docker_username
  when:
    event:
      exclude:
      - pull_request

trigger:
  ref:
  - refs/heads/master
  - "refs/pull/**"
  - "refs/tags/**"

depends_on:
- testing

...
